// 문제
// 매일 아침 9시에 학교에서 측정한 온도가 어떤 정수의 수열로 주어졌을 때, 연속적인 며칠 동안의 온도의 합이 가장 큰 값을 알아보고자 한다.

// 예를 들어, 아래와 같이 10일 간의 온도가 주어졌을 때,

// 3 -2 -4 -9 0 3 7 13 8 -3

// 모든 연속적인 이틀간의 온도의 합은 아래와 같다.



// 이때, 온도의 합이 가장 큰 값은 21이다.

// 또 다른 예로 위와 같은 온도가 주어졌을 때, 모든 연속적인 5일 간의 온도의 합은 아래와 같으며,



// 이때, 온도의 합이 가장 큰 값은 31이다.

// 매일 측정한 온도가 정수의 수열로 주어졌을 때, 연속적인 며칠 동안의 온도의 합이 가장 큰 값을 계산하는 프로그램을 작성하시오.

// 입력
// 첫째 줄에는 두 개의 정수 N과 K가 한 개의 공백을 사이에 두고 순서대로 주어진다. 첫 번째 정수 N은 온도를 측정한 전체 날짜의 수이다. N은 2 이상 100,000 이하이다. 두 번째 정수 K는 합을 구하기 위한 연속적인 날짜의 수이다. K는 1과 N 사이의 정수이다. 둘째 줄에는 매일 측정한 온도를 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -100 이상 100 이하이다.

// 출력
// 첫째 줄에는 입력되는 온도의 수열에서 연속적인 K일의 온도의 합이 최대가 되는 값을 출력한다.


// 1. 아이디어
// - 투포인터 활용
// - for문으로 처음에 K개 값을 저장
// - 다음 인덱스 더해주고, 이전 인덱스 빼줌
// - 이 때마다 최대값을 갱신
// 2. 시간 복잡도
// o(N) = 10만 > 가능
// 3. 자료구조
// - 각 숫자 N개를 저장할 배열
// - K개의 값을 저장 변수

#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

vector<int> ivec;
int n, k;

int main()
{
    cin >> n >> k;

    // 입력 값의 최대 수가 많기 때문에 cin을 여러번 호출하는 것을 옳지 않다.
    // 입력 값이 한줄로 들어오기 대문에 아래와 같이 한다면 성능이 향상된다.
    cin.ignore(); // 버퍼 비우기
    string line;
    getline(cin,line); // 한 줄을 다 읽어와서 string에 넣는다.
    istringstream iss(line); // string 스트림으로 변환 <sstream> include 필요
    
    int input;
    while(iss >> input) // 스트림에서 int 값을 하나씩 꺼내온다.
    {
        ivec.push_back(input);
    }

    int isum = 0;
    for(int i =0; i < k; i++)
    {
        isum += ivec[i];
    }

    int imax = isum;

    for(int i = k; i < n; i++)
    {
        isum += ivec[i];
        isum -= ivec[i-k];
        imax = max(imax,isum);
    }
    cout << imax;
}